package com.medtracker.admin.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.medtracker.admin.entities.PatientEO;
import com.medtracker.admin.entities.RoleEO;
import com.medtracker.admin.entities.UserEO;
import com.medtracker.admin.service.AdminService;

@RestController
@RequestMapping("/admin")
@CrossOrigin(origins = "http://localhost:3000/")
public class AdminController {
	
	@Autowired
	private AdminService adminService;

	@GetMapping("/fetchAllPatients")
	public List<PatientEO> fetchAllPatients() {
		return adminService.fetchAllPatients();
	}

	@PostMapping("/addPatient")
	public PatientEO addPatient(@RequestBody PatientEO patientEO) {
		return adminService.addPatient(patientEO);
	}

	@PutMapping("/updatePatient")
	public PatientEO updatePatient(@RequestBody PatientEO patientEO) {
		return adminService.updatePatient(patientEO);
	}
	
	@GetMapping("/fetchPatientById/{patientID}")
	private PatientEO fetchPatientById(@PathVariable(value="patientID") String patientID) {
		return adminService.fetchPatientById(patientID);
	}
	
	@DeleteMapping("/deleteById/{patientID}")
	private void deletePatientById(@PathVariable(value="patientID") String patientId) {
		 adminService.deletePatientById(patientId);
	}
	
	@PostMapping("/addUser")
	public UserEO addUser(@RequestBody UserEO userEO) {
		return adminService.addUser(userEO);
	}

	@PutMapping("/updateUser")
	public UserEO updateUser(@RequestBody UserEO userEO) {
		return adminService.UpdateUser(userEO);
	}
	
	@DeleteMapping("/deleteUser/{userId}")
	private void deleteUserById(@PathVariable(value="userId") String userId) {
		 adminService.deleteById(userId);
	}
	
	@PutMapping("/updateRole")
	public RoleEO updateRole(@RequestBody RoleEO roleEO) {
		// TODO Auto-generated method stub
		return adminService.updateRole(roleEO);
	}

	@DeleteMapping("/deleteRole/{rolename}")
	public void deleteRoleById(@PathVariable(value="roleName") String roleName) {
		// TODO Auto-generated method stub
		adminService.deleteRoleById(roleName);
	}

	@PostMapping("/addRole")
	public RoleEO addRole(@RequestBody RoleEO roleEO) {
		// TODO Auto-generated method stub
		return adminService.addRole(roleEO);
	}


	public List<RoleEO> fetchAllRoles() {
		// TODO Auto-generated method stub
		return adminService.fetchAllRoles();
	}
}
