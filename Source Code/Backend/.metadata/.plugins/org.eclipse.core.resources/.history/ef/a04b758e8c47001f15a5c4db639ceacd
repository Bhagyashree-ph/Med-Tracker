package com.medtracker.provider.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.medtracker.provider.entities.DoctorEO;
import com.medtracker.provider.entities.HospitalEO;
import com.medtracker.provider.entities.PatientEO;
import com.medtracker.provider.entities.PrescMedMappingEO;
import com.medtracker.provider.entities.RefillRequestEO;
import com.medtracker.provider.entities.RemainderEO;
import com.medtracker.provider.entities.UserEO;
import com.medtracker.provider.service.ProviderService;

@RestController
@RequestMapping("/provider")
//@CrossOrigin(origins = "http://localhost:3000")
public class ProviderController {

	@Autowired
	private ProviderService providerService;
	
	@GetMapping("/fetchAllPatients")
	public List<PatientEO> fetchAllPatients() {	
		List<PatientEO> patients = providerService.fetchAllPatients();
		System.out.println("Controller : "+patients);
		return patients;
	}

	@GetMapping("/fetchPatientById/{patientID}")
	public List<PrescMedMappingEO> fetchPatientById(@PathVariable String patientID) {
		return providerService.fetchPatientDetailsById(patientID);
	}
	
	public PrescMedMappingEO addPrescriptionAndMedication(PrescMedMappingEO prescMedMappingEO) {
		return providerService.addPrescriptionAndMedication(prescMedMappingEO);
	}

	public PrescMedMappingEO updatePrescriptionAndMedication(PrescMedMappingEO prescMedMappingEO) {
		return providerService.updatePrescriptionAndMedication(prescMedMappingEO);
	}

	public RefillRequestEO updateRequest(RefillRequestEO refillRequestEO) {
		return providerService.updateRequest(refillRequestEO);
	}
	
	public List<RefillRequestEO> fetchAllRequests() {
		return providerService.fetchAllRequests();
	}
	
	public RemainderEO setRemainder(RemainderEO remainderEO) {
		return providerService.setRemainder(remainderEO);
	}
	
	public List<HospitalEO> fetchAllHospitals() {
		
	}
	
	public List<DoctorEO> fetchAllDoctors() {
		
	}

}
